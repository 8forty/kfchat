metadata:
  version: 2025-04-21.00:00:00PDT

anchors:
  oai-key-base: &oai-key-base
    api_key_env: kfOPENAI_API_KEY
    api_base_env: kfOPENAI_ENDPOINT

  oai-key: &oai-key
    api_key_env: kfOPENAI_API_KEY

  ghoai-key-base: &ghoai-key-base
    api_key_env: kfGITHUB_TOKEN
    api_base_env: kfGITHUB_ENDPOINT

  ghoai-key: &ghoai-key
    api_key_env: kfGITHUB_TOKEN

  ggai-key: &ggai-key
    api_key_env: kfGEMINI_API_KEY

  # NOTE: lc embedding function doesn't support api_base args (yet?)
  ggai-key-base-v1beta: &ggai-key-base-v1beta
    api_key_env: kfGEMINI_API_KEY
    api_base_env: kfGEMINI_ENDPOINTv1beta

  ggai-key-base-v1: &ggai-key-base-v1
    api_key_env: kfGEMINI_API_KEY
    api_base_env: kfGEMINI_ENDPOINTv1


# embedding types
# any node with a name that ends with _env triggers replacement by a node without the _env set to the corresponding env-var value
SentenceTransformer-Embeddings:

  all-MiniLM-L6-v2:
    embedding_function_key: SentenceTransformer
    create_parms:
      model_name: all-MiniLM-L6-v2
    read_parms:

  all-mpnet-base-v2:
    embedding_function_key: SentenceTransformer
    create_parms:
      model_name: all-mpnet-base-v2
    read_parms:

OpenAI-Embeddings:

  text-embedding-3-large:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-3-large
      <<: *oai-key-base
    read_parms:
      <<: *oai-key

  text-embedding-ada-002:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-ada-002
      <<: *oai-key-base
    read_parms:
      <<: *oai-key

  text-embedding-3-small:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-3-small
      <<: *oai-key-base
    read_parms:
      <<: *oai-key

Google-GenerativeAI-Embeddings:

  models/gemini-embedding-exp-03-07:
    embedding_function_key: GoogleGenerativeAi
    create_parms:
      model_name: models/gemini-embedding-exp-03-07
      <<: *ggai-key
    read_parms:
      <<: *ggai-key

  models/text-embedding-005:
    embedding_function_key: GoogleGenerativeAi
    create_parms:
      model_name: models/text-embedding-005
      <<: *ggai-key
      # NOTE: lc embedding function doesn't support api_base args (yet?)
      # <<: *ggai-key-base-v1beta
    read_parms:
      <<: *ggai-key

  models/text-embedding-004:
    embedding_function_key: GoogleGenerativeAi
    create_parms:
      model_name: models/text-embedding-004
      <<: *ggai-key
    read_parms:
      <<: *ggai-key

  models/embedding-001:
    embedding_function_key: GoogleGenerativeAi
    create_parms:
      model_name: models/embedding-001
      <<: *ggai-key
    read_parms:
      <<: *ggai-key


Ollama-Embeddings:

  nomic-embed-text:
    embedding_function_key: Ollama
    create_parms:
      model_name: nomic-embed-text
      url: http://localhost:11434/api/embeddings
    read_parms:

  snowflake-arctic-embed2:
    embedding_function_key: Ollama
    create_parms:
      model_name: snowflake-arctic-embed2
      url: http://localhost:11434/api/embeddings
    read_parms:

  mxbai-embed-large:
    embedding_function_key: Ollama
    create_parms:
      model_name: mxbai-embed-large
      url: http://localhost:11434/api/embeddings
    read_parms:

#  granite-embedding:278m:
#    embedding_function_key: Ollama
#    create_parms:
#      model_name: granite-embedding:278m
#      url: http://localhost:11434/api/embeddings
#    read_parms:


Github-OpenAI-Embeddings:

  text-embedding-3-large:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-3-large
      <<: *ghoai-key-base
    read_parms:
      <<: *ghoai-key

  text-embedding-ada-002:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-ada-002
      <<: *ghoai-key-base
    read_parms:
      <<: *ghoai-key

  text-embedding-3-small:
    embedding_function_key: OpenAI
    create_parms:
      model_name: text-embedding-3-small
      <<: *ghoai-key-base
    read_parms:
      <<: *ghoai-key
